{
  // Configuration for JavaScript files
  "extends": [
    "airbnb-base",
    "plugin:prettier/recommended"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": false,
        "endOfLine": "auto"
      }
    ],
		"no-unused-vars": ["error", { "ignoreRestSiblings": true }]
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["**/*.ts"],
      "plugins": [
        "@typescript-eslint",
				"import",
        "unused-imports"
      ],
      "extends": [
        "airbnb-typescript/base",
        "plugin:prettier/recommended"
      ],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
			"settings": {
				"import/resolver": {
					"typescript": {
						"alwaysTryTypes": true, // always try to resolve types under `<root>@types` directory even it doesn't contain any source code, like `@types/unist`
						"project": "./tsconfig.json"
					}
				}
			},
      "rules": {
				"no-console": "off",
				"no-underscore-dangle": "off",
        "prettier/prettier": [
          "error",
          {
            "singleQuote": false,
            "endOfLine": "auto"
          }
        ],
				"no-unused-vars": ["error", { "ignoreRestSiblings": true }],
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "@typescript-eslint/no-unused-vars": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": [
          "error",
          { "argsIgnorePattern": "^_", "ignoreRestSiblings": true }
        ],
				"no-param-reassign": "off",
				"class-methods-use-this": "off"
      }
    }
  ]
}
